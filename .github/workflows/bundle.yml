# This workflow will upload the executables bundled with Pyinstaller when a new release is published.
name: Upload executables to published release

on:
  release:
    types: [published]

jobs:
  bundle_linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
      
    - name: Install dependencies (pyinstaller, requirements.txt)
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Bundle with Pyinstaller
      run: |
        pyinstaller run.py -F -n heroed
      
    - name: Upload bundle file to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/heroed
          asset_name: heroed
          asset_content_type: application/octet-stream

  bundle_windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
      
    - name: Install dependencies (pyinstaller, requirements.txt)
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Bundle with Pyinstaller
      run: |
        pyinstaller run.py -F -n heroed
      
    - name: Upload bundle file to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/heroed.exe
          asset_name: heroed.exe
          asset_content_type: application/octet-stream
